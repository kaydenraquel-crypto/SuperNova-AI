apiVersion: apps/v1
kind: Deployment
metadata:
  name: supernova-app
  namespace: supernova-production
  labels:
    app: supernova-ai
    component: api
    environment: production
    version: v1.0.0
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "SuperNova AI Main Application Deployment"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: supernova-ai
      component: api
  template:
    metadata:
      labels:
        app: supernova-ai
        component: api
        environment: production
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        config.hash: "{{ config_hash }}"  # Triggers restart on config changes
    spec:
      serviceAccountName: supernova-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: supernova-api
          image: supernova-ai:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: websocket
              containerPort: 8001
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          
          envFrom:
            - configMapRef:
                name: supernova-config-production
            - secretRef:
                name: supernova-secrets-production
            - secretRef:
                name: supernova-secrets-external
                optional: true
          
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          
          resources:
            requests:
              cpu: 1000m
              memory: 2Gi
              ephemeral-storage: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi
              ephemeral-storage: 2Gi
          
          livenessProbe:
            httpGet:
              path: /health
              port: http
              httpHeaders:
                - name: X-Health-Check
                  value: kubernetes
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /ready
              port: http
              httpHeaders:
                - name: X-Readiness-Check
                  value: kubernetes
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 12
          
          volumeMounts:
            - name: app-data
              mountPath: /app/data
            - name: app-logs
              mountPath: /var/log/supernova
            - name: app-config
              mountPath: /app/config
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
              readOnly: true
            - name: tmp
              mountPath: /tmp
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: supernova-data-pvc
        
        - name: app-logs
          persistentVolumeClaim:
            claimName: supernova-logs-pvc
        
        - name: app-config
          configMap:
            name: supernova-config
            defaultMode: 0444
        
        - name: ssl-certs
          secret:
            secretName: supernova-ssl-certs
            defaultMode: 0444
        
        - name: tmp
          emptyDir: {}
      
      nodeSelector:
        kubernetes.io/arch: amd64
        node-type: worker
      
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - supernova-ai
                    - key: component
                      operator: In
                      values:
                        - api
                topologyKey: kubernetes.io/hostname
        
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
          
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                      - worker
            - weight: 30
              preference:
                matchExpressions:
                  - key: zone
                    operator: In
                    values:
                      - us-east-1a
                      - us-east-1b
      
      terminationGracePeriodSeconds: 45
      
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
          - name: edns0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress
  namespace: supernova-production
  labels:
    app: supernova-ai
    component: nginx
    environment: production
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: supernova-ai
      component: nginx
  template:
    metadata:
      labels:
        app: supernova-ai
        component: nginx
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: nginx
          image: nginx:1.24-alpine
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: metrics
              containerPort: 9113
          
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
              readOnly: true
            - name: ssl-private
              mountPath: /etc/ssl/private
              readOnly: true
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
          
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 101
            runAsGroup: 101
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
        
        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:0.10.0
          args:
            - "-nginx.scrape-uri=http://localhost:80/nginx_status"
          ports:
            - name: metrics
              containerPort: 9113
          
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
      
      volumes:
        - name: nginx-config
          configMap:
            name: supernova-nginx-config
            defaultMode: 0444
        
        - name: ssl-certs
          secret:
            secretName: supernova-ssl-certs
            defaultMode: 0444
        
        - name: ssl-private
          secret:
            secretName: supernova-ssl-private
            defaultMode: 0400
        
        - name: nginx-cache
          emptyDir: {}
        
        - name: nginx-run
          emptyDir: {}
      
      nodeSelector:
        kubernetes.io/arch: amd64
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - supernova-ai
                    - key: component
                      operator: In
                      values:
                        - nginx
                topologyKey: kubernetes.io/hostname

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: supernova-production
  labels:
    app: supernova-ai
    component: redis
    role: master
    environment: production
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: supernova-ai
      component: redis
      role: master
  template:
    metadata:
      labels:
        app: supernova-ai
        component: redis
        role: master
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          command:
            - redis-server
            - /etc/redis/redis.conf
          ports:
            - name: redis
              containerPort: 6379
          
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: supernova-secrets
                  key: redis_password
          
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis
              readOnly: true
          
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 999
            runAsGroup: 999
            capabilities:
              drop:
                - ALL
        
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          ports:
            - name: metrics
              containerPort: 9121
          
          env:
            - name: REDIS_ADDR
              value: "redis://localhost:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: supernova-secrets
                  key: redis_password
          
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
      
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data-pvc
        
        - name: redis-config
          configMap:
            name: redis-config
            defaultMode: 0444
      
      nodeSelector:
        kubernetes.io/arch: amd64
      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64